<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFrameworks>net8.0</TargetFrameworks>
    <Authors>Damian Suess</Authors>
    <Title>Sample MVVM App</Title>
    <Nullable>enable</Nullable>
    <LangVersion>10.0</LangVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Append Target Framework: Set to TRUE when using multiple TargetFrameworks -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <EnableAvaloniaXamlCompilation>true</EnableAvaloniaXamlCompilation>
  </PropertyGroup>
  <ItemGroup>
    <AvaloniaResource Include="Assets\**" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.0.7" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.7" />
    <PackageReference Include="Avalonia.Diagnostics" Version="11.0.7" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="11.0.7" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.7" />
    <PackageReference Include="Prism.Avalonia" Version="8.1.97.11073" />
    <PackageReference Include="Prism.DryIoc.Avalonia" Version="8.1.97.11073" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Views\ShellWindow.axaml.cs">
      <DependentUpon>ShellWindow.axaml</DependentUpon>
    </Compile>
    <Compile Update="Views\SubSettingsView.axaml.cs">
      <DependentUpon>SubSettingsView.axaml</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <!--This helps with theme dll-s trimming.
	If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
	https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
    <TrimmableAssembly Include="Avalonia.Themes.Fluent" />
    <TrimmableAssembly Include="Avalonia.Themes.Default" />
  </ItemGroup>
</Project>
